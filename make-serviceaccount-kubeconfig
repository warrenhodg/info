#!/bin/bash

# from https://stackoverflow.com/questions/47770676/how-to-create-a-kubectl-config-file-for-serviceaccount

if [[ -z $namespace ]]; then
  echo "must specify namespace"
  exit 1
fi

if [[ -z $serviceAccount ]]; then
  echo "must specify serviceAccount"
  exit 1
fi

if [[ -z $clusterName ]]; then
  echo "must specify clusterName"
  exit 1
fi

if [[ -z $server ]]; then
  echo "must specify server"
  exit 1
fi

# You might need to
# define a Secret, reference the ServiceAccount there and set the secretName by hand!
# See https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#manually-create-a-long-lived-api-token-for-a-serviceaccount for details
secretName=$(kubectl --namespace="$namespace" get serviceAccount "$serviceAccount" -o=jsonpath='{.secrets[0].name}')

######################
# actual script starts
set -o errexit


ca=$(kubectl --namespace="$namespace" get secret/"$secretName" -o=jsonpath='{.data.ca\.crt}')
token=$(kubectl --namespace="$namespace" get secret/"$secretName" -o=jsonpath='{.data.token}' | base64 --decode)

echo "
---
apiVersion: v1
kind: Config
clusters:
  - name: ${clusterName}
    cluster:
      certificate-authority-data: ${ca}
      server: ${server}
contexts:
  - name: ${serviceAccount}@${clusterName}
    context:
      cluster: ${clusterName}
      namespace: ${namespace}
      user: ${serviceAccount}
users:
  - name: ${serviceAccount}
    user:
      token: ${token}
current-context: ${serviceAccount}@${clusterName}
"
